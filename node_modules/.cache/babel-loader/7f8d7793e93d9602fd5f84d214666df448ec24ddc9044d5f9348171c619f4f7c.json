{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RINO\\\\Desktop\\\\Application\\\\client\\\\src\\\\component\\\\Addtask.js\",\n  _s = $RefreshSig$();\nimport './Addtask.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Addtask(props) {\n  _s();\n  const [task, Settask] = useState(\"\");\n  const addtask = () => {\n    if (task.trim() === '') {\n      return;\n    } else {\n      axios.post('http://localhost:8000/api/task', {\n        todo: task,\n        isComplete: false\n      }).then(res => {\n        Settask(\"\");\n        props.addTask(res.data);\n      }).catch(err => console.log(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addtask\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Task . . .\",\n      value: task,\n      onChange: event => Settask(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addtask(),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Addtask, \"nSilCkQXIMUJAxK7khJWgolq9yE=\");\n_c = Addtask;\nexport default Addtask;\nvar _c;\n$RefreshReg$(_c, \"Addtask\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Addtask","props","_s","task","Settask","addtask","trim","post","todo","isComplete","then","res","addTask","data","catch","err","console","log","className","children","type","placeholder","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RINO/Desktop/Application/client/src/component/Addtask.js"],"sourcesContent":["import './Addtask.css'\r\nimport React ,{useState}from 'react'\r\nimport axios from 'axios'\r\nfunction Addtask(props) {\r\n    const [task,Settask] = useState(\"\")\r\n    const addtask = () => {\r\n        if(task.trim() === ''){\r\n            return \r\n        } else {\r\n            axios.post('http://localhost:8000/api/task' , {\r\n                todo : task,\r\n                isComplete : false\r\n            }).then(res => {\r\n                Settask(\"\")\r\n                props.addTask(res.data)\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }\r\n    return (\r\n        <div className = 'addtask'>\r\n            <input type='text' placeholder = 'Add Task . . .' value = {task} onChange = {event => Settask(event.target.value)}/>\r\n            <button onClick = {() => addtask()}>Add Task</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n"],"mappings":";;AAAA,OAAO,eAAe;AACtB,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMS,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAGF,IAAI,CAACG,IAAI,EAAE,KAAK,EAAE,EAAC;MAClB;IACJ,CAAC,MAAM;MACHT,KAAK,CAACU,IAAI,CAAC,gCAAgC,EAAG;QAC1CC,IAAI,EAAGL,IAAI;QACXM,UAAU,EAAG;MACjB,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QACXP,OAAO,CAAC,EAAE,CAAC;QACXH,KAAK,CAACW,OAAO,CAACD,GAAG,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACrC;EACJ,CAAC;EACD,oBACIhB,OAAA;IAAKmB,SAAS,EAAG,SAAS;IAAAC,QAAA,gBACtBpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAG,gBAAgB;MAACC,KAAK,EAAInB,IAAK;MAACoB,QAAQ,EAAIC,KAAK,IAAIpB,OAAO,CAACoB,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACpH9B,OAAA;MAAQ+B,OAAO,EAAIA,CAAA,KAAMzB,OAAO,EAAG;MAAAc,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAEd;AAAC3B,EAAA,CArBQF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAuBhB,eAAeA,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}